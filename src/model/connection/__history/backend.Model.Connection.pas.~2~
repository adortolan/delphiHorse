unit backend.Model.Connection;

interface

uses
  System.JSON,
  System.Generics.Collections,
  FireDAC.Stan.Intf,
  FireDAC.Stan.Option,
  FireDAC.Stan.Error,
  FireDAC.UI.Intf,
  FireDAC.Phys.Intf,
  FireDAC.Stan.Def,
  FireDAC.Stan.Pool,
  FireDAC.Stan.Async,
  FireDAC.Phys,
  Data.DB,
  FireDAC.Comp.Client,
  Firedac.DApt,
  Firedac.Phys.FB,
  Firedac.Phys.SQLite,
  Firedac.Phys.SQLiteDef,
  Firedac.Phys.FBDef,
  Firedac.Phys.MySQLDef,
  Firedac.Phys.MySQL,
  FireDAC.VCLUI.Wait,
  FireDAC.Comp.UI;

var
  FDriver: TFDPhysMYSQLDriverLink;
  FConnlist: TObjectList<TFDConnection>;

  function Connected: Integer;
  procedure Disconnected(IndexConn: Integer);

implementation

function Connected: Integer;
var
  IndexConn: Integer;
begin
  if not Assigned(FConnlist) then
    FConnlist :=  TObjectList<TFDConnection>.Create;

  FConnlist.Add(TFDConnection.Create(nil));
  IndexConn := Pred(FConnlist.Count);
  FConnList.Items[IndexConn].Params.UserName := 'root';
  FConnList.Items[IndexConn].Params.Password := 'adl';
  FConnlist.Items[IndexConn].Params.Database := 'catalogovideos';
  FConnList.Items[IndexConn].Params.Add('Port=3306');
  FConnList.Items[IndexConn].Params.Add('CharacterSet=utf8');
  FConnList.Items[IndexConn].Params.Add('Server=xxx');
  FConnList.Items[IndexConn].Params.Add('LockingMode=Normal');
  FConnList.Items[IndexConn].Connected;
  Result := IndexConn;
end;

end.

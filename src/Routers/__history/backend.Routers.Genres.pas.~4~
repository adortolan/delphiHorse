unit backend.Routers.Genres;

interface

uses
  System.JSON,
  Horse,
  Horse.Jhonson,
  Horse.CORS,
  backend.Controller;

  procedure Registry;

implementation

uses
  System.Classes,
  backend.Controller.Interfaces,
  System.SysUtils,
  Horse.Paginate,
  backend.Model.Entity.Genres,
  backend.Utils;

procedure Registry;
begin
  THorse
  .Use(Paginate)
  .Use(Jhonson)
  .Use(CORS)

  .Get('/Genres',
    procedure(Req: THorseRequest; Res: THorseResponse; Next: TProc)
    var
      iController: iControllerEntity<TGenres>;
    begin
      iController := TController.New.Genres;
      iController.This
        .DAO
        .SQL
          .Where(TServerUtils.New.LikeFind(Req))
          .OrderBy(TServerUtils.New.OrderByFind(Req))
        .&End
      .Find(False);

      Res.Send<TJsonArray>(iController.This.DataSetAsJsonArray);
    end
  )


end;

end.
